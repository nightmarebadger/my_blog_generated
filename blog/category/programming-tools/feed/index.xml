<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:wfw="http://wellformedweb.org/CommentAPI/"
     >
  <channel>
    <title>NMB's Development Blog</title>
    <link>http://www.natan.termitnjak.net//blog</link>
    <description>Blog with tutorials about Python, web developent and various other interesting topics from the world of computers.</description>
    <pubDate>Sun, 15 Dec 2013 23:26:06 GMT</pubDate>
    <generator>Blogofile</generator>
    <sy:updatePeriod>hourly</sy:updatePeriod>
    <sy:updateFrequency>1</sy:updateFrequency>
    <item>
      <title>My Sublime Text 2 settings</title>
      <link>http://www.natan.termitnjak.net/blog/2013/12/08/my-sublime-text-2-settings</link>
      <pubDate>Sun, 08 Dec 2013 22:00:00 CET</pubDate>
      <category><![CDATA[sublime text]]></category>
      <category><![CDATA[programming tools]]></category>
      <category><![CDATA[editors]]></category>
      <guid isPermaLink="false">L_-uDkoV-XA6fvqj96fshQtaQgs=</guid>
      <description>My Sublime Text 2 settings</description>
      <content:encoded><![CDATA[<p>In this post I will go through the core addons I use (I might use some more
here and there but these are the ones I find the most useful).</p>
<h2 id="addons-i-use">Addons I use</h2>
<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>Addon name and link</th>
            <th>Description</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
                <a href="https://github.com/simme--/Auto-Encoding-for-Python">
                    Auto Encoding for Python
                </a>
            </td>
            <td>

                Automatically include utf-8 Python encoding where needed.

            </td>
        </tr>
        <tr>
            <td>
                <a href="https://github.com/spadgos/sublime-jsdocs">
                    DocBlockr
                </a>
            </td>
            <td>

                Simplifies writing DocBlock comments in JS, CoffeScript,
                Actionscript, PHP, C, ...

            </td>
        </tr>
        <tr>
            <td>
                <a href="https://github.com/revolunet/sublimetext-markdown-preview">
                    Mako
                </a>
            </td>
            <td>

                Added support for Mako templates highlighting.

            </td>
        </tr>
        <tr>
            <td>
                <a href="https://github.com/revolunet/sublimetext-markdown-preview">
                    Markdown Preview
                </a>
            </td>
            <td>

                Preview for your markdown files.

            </td>
        </tr>
        <tr>
            <td>
                <a href="https://github.com/borist/SublimePaneNavigation">
                    Pane Navigation
                </a>
            </td>
            <td>

                Changes tab navigation (Ctrl + Tab) to be more in
                line with what we're used to.

            </td>
        </tr>
        <tr>
            <td>
                <a href="https://github.com/titoBouzout/SideBarEnhancements">
                    SideBarEnhancements
                </a>
            </td>
            <td>

                Gives extra options in the sidebar.

            </td>
        </tr>
        <tr>
            <td>
                <a href="https://github.com/SublimeCodeIntel/SublimeCodeIntel">
                    SublimeCodeIntel
                </a>
            </td>
            <td>

                Code intelligence plugin (imports autocomplete, function
                tooltips, jump to definition, ... ).

            </td>
        </tr>
        <tr>
            <td>
                <a href="https://github.com/SublimeLinter/SublimeLinter">
                    SublimeLinter
                </a>
            </td>
            <td>

                Support for "lint" programs for many languages.

            </td>
        </tr>
        <tr>
            <td>
                <a href="https://github.com/JulianEberius/SublimeRope">
                    SublimeRope
                </a>
            </td>
            <td>

                Adds Rope (re-factoring library) support.

            </td>
        </tr>
         <tr>
            <td>
                <a href="https://github.com/JulianEberius/SublimeRope">
                    Sublime Wrap Plus
                </a>
            </td>
            <td>

                Extra support for hard line wrap.

            </td>
        </tr>
        <tr>
            <td>
                <a href="https://github.com/amisarca/Sublime-Text-2-Table-Cleaner">
                    TableCleaner
                </a>
            </td>
            <td>

                Cleans tables (aligns and cleans nicely on "pipe" character
                (|), useful for Sphinx documentation, LaTeX etc.).

            </td>
        </tr>
        <tr>
            <td>
                <a href="https://github.com/SublimeText/Tag">
                    Tag
                </a>
            </td>
            <td>

                Provides extra support for HTMLish tags - auto close tags on
                slash, automatically indent tags etc.

            </td>
        </tr>
    </tbody>
</table>

<h3 id="auto-encoding-for-python">Auto Encoding for Python</h3>
<p>Since I speak a language that often uses utf-8 characters, I'm getting tired of
writing <code># -*- coding: utf-8 -*-</code> or something similar on the top of each file
that uses one of those characters. This addon does that for me, only generating
the encoding declaration when it's needed and deleting it when it's not needed
any more.</p>
<h3 id="docblockr">DocBlockr</h3>
<p>Really simplifies the writing of block comments for functions in JS etc. I've
also started working on Python support, but it's not that far along yet. You
can find what I've added on my
<a href="https://github.com/nightmarebadger/sublime-jsdocs/tree/add_python_support">GitHub</a>.</p>
<h3 id="mako">Mako</h3>
<p>Adds the Mako template syntax highlighter to Sublime Text 2. Very useful for
everyone working with Mako templates.</p>
<h3 id="markdown-preview">Markdown Preview</h3>
<p>An addon that allows you quickly build the Markdown in the currently open file
and preview it in the browser. Very useful, especially when you are just
starting to learn Markdown.</p>
<p>Once you generate the file, it's also automatically updated on each save,
making it a very fast way to check how your changes changed the document.</p>
<p>Also supports Git flavoured Markdown, which uses the actual GitHub API, and as
such, a Python with SSL support is required.</p>
<h3 id="pane-navigation">Pane Navigation</h3>
<p>Changing between opened files in Sublime Text 2 using <em>Ctrl+Tab</em> or
<em>Ctrl+Shift+Tab</em> can be an ... interesting experience. It definitely does not
work as you would expect at the beginning (it does not move right or left
through the opened tabs, but rather works through a last-changed list or
something like that).</p>
<p>If you do not like how it's handled in the vanilla install, grab this package,
which changes the navigation to something you're probably more used to
(<em>Ctrl+Tab</em> moves right, <em>Ctrl+Shift+Tab</em> moves left).</p>
<h3 id="sidebarenhancements">SideBarEnhancements</h3>
<p>Adds many new options like deleting, moving, renaming, copying etc. to the
Sidebar. Frankly I've used this since I started using ST2 so I'm not completely
sure which options are integrated and which options are added by the package,
but you surely have nothing to lose by installing this.</p>
<h3 id="sublimecodeintel">SublimeCodeIntel</h3>
<p>Adds code intelligence, ported from <a href="http://www.openkomodo.com/">Open Komodo
Editor</a>. Adds stuff like function call tool tips,
auto completion from imports, jump to symbol definition etc.</p>
<h3 id="sublimelinter">SublimeLinter</h3>
<p>Adds support for "lint" programs for many languages. This is an invaluable tool
that constantly checks your code to see if it's up to the standards, making it
easy to produce better code faster. Do not even think if you need this or not -
just install it :).</p>
<h3 id="sublimerope">SublimeRope</h3>
<p>Adds support for the Rope (re-factoring library), making it even easier to
re-factor and restructure your code, automatically manage your imports, get
documentation, features an extended auto completion etc.</p>
<h3 id="sublimewrapplus">SublimeWrapPlus</h3>
<p>Better hard line wrapping (<em>Alt+Q</em>), now works correctly in many instances
where it didn't work as expected before (for instance in Markdown lists).</p>
<h3 id="tablecleaner">TableCleaner</h3>
<p>I use it to align tables/data that I write. Very useful when trying to organise
some data or when writing LaTeX or Markdown tables.</p>
<h3 id="tag">Tag</h3>
<p>Extra support for writing HTML tags, makes writing HTML much easier and faster.
It helps with closing tags, adds autocompletion for HTML tags using <em>Tab</em> etc.</p>
<h2 id="personal-settings">Personal settings</h2>
<p>I will not list my full settings (which include dictionaries etc.) or settings
for individual addons, but rather just the base settings I think might be
useful to everyone.</p>
<pre><code>{
    "ensure_newline_at_eof_on_save": true,
    "fallback_encoding": "UTF-8",
    "hot_exit": false,
    "remember_open_files": false,
    "rulers":
    [
        79
    ],
    "tab_size": 4,
    "translate_tabs_to_spaces": true,
    "trim_trailing_white_space_on_save": true
}
</code></pre>
<p>The settings are more or less self explanatory - I make sure to always use
spaces instead of tabs (one tab equals to 4 spaces), ensure a newline at the
end of file and trim trailing white space on save.</p>
<p>I also disabled "hot exit", which closes without prompting to save and
preserves your changes until you open Sublime Text 2 again. This, in addition
to disabling the "remember_open_files" option makes sure I always start with a
clean editor (unless it crashed, where everything is still preserved and all
windows are reopened).</p>
<p>I also set a ruler to 79 characters for keeping with Python coding standards.</p>]]></content:encoded>
    </item>
    <item>
      <title>Battle of the editors - Sublime Text 2</title>
      <link>http://www.natan.termitnjak.net/blog/2013/11/11/battle-of-the-editors-sublime-text-2</link>
      <pubDate>Mon, 11 Nov 2013 02:30:00 CET</pubDate>
      <category><![CDATA[sublime text]]></category>
      <category><![CDATA[programming tools]]></category>
      <category><![CDATA[editors]]></category>
      <guid isPermaLink="false">7MYn-UjatGT908QveKfIYvsM57o=</guid>
      <description>Battle of the editors - Sublime Text 2</description>
      <content:encoded><![CDATA[<p>As most of us, I've been struggling with finding the "perfect" editor. For me,
that meant an editor that could be used for many different languages (C,
Python, HTML, CSS, JavaScript, ... ), could also be used for "normal" use
(Markdown, RST, LaTeX), would start up fast and generally be fast enough so I
didn't have to wait around for it and could optionally be extended with various
plugins.</p>
<p>Furthermore, I'd like the "out of the box" functionality to be good, and if at
all possible, it should be easy to synchronise my settings across devices.
Working under multiple platforms would also be a plus, since I couldn't count
on always working on the same operating system.</p>
<p>In the end, I have found what I have been looking for in Sublime Text 2, which,
at least for now, is close enough to my "perfect" editor that I do not feel the
need to test out new editors.</p>
<p>This editor is light, fast and has a nice &amp; clean design. The out of the box
functionality is good, and can very easily be extended using packages from the
Package control. It's also Python based, so writing or changing/adding to
plugins is a breeze. Additionally, it offers some really useful features I
haven't seen in other editors I have used.</p>
<h2 id="editors-i-have-used-in-the-past">Editors I have used in the past</h2>
<p>The editors I've gone through until now are:</p>
<ul>
<li><strong>Vim</strong>: While complex and "strange", it allowed me to do practically
  everything and could be extended in many ways. Since it's a console editor, I
  still use it when I don't have access to the GUI and for simple tasks.</li>
<li><strong>TextPad</strong>: We used this at the university, and while it was OK for what we
  needed it, it didn't impress me in any way.</li>
<li><strong>Notepad++</strong>: Same as above.</li>
<li><strong>Eclipse / Aptana studio</strong>: As I started working with Python more I started
  looking for an IDE that I could use instead of just using Vim. I've come
  across Aptana studio (Eclipse for web development and Python). While
  powerful, it was too big, clunky and slow for my tastes.</li>
<li><strong>Sublime Text 2</strong>: Another editor I came across at the university - this
  time a professor used it on his Mac, so I didn't really pay attention to it.
  Later found out it works in Windows and Linux too so I took it for a test run
  and haven't looked back since :)</li>
</ul>
<h2 id="best-sublime-text-2-features">Best Sublime Text 2 features</h2>
<p>This is in no way a complete list of Sublime Text 2 features, it is just a list
of my personal favourite things about Sublime Text.</p>
<h3 id="goto-anything">Goto anything</h3>
<p>This here is amazing and I use it all the time. Basically, it allows you to
press <em>Ctrl+P</em> to search over all the files opened in the editor and (very!)
quickly search and change between them. It is also not only limited to simple
file searching and opening, but you can also:</p>
<ul>
<li>Start typing to search between the files</li>
<li>Type "@"" to search between sections of the file (headers, function
  definitions etc.)</li>
<li>Type "#"" to search within the file</li>
<li>Type ":" to go to a line number</li>
</ul>
<p>And now the real catch - these options can be combined! So I can fire up the
Goto anything using the command <em>Ctrl+P</em>, write "edit" to find the
"battle-of-the-editors.markdown" file, then continue with "edit@got" to find
this section, or do an "edit#combined" to directly search for "combined", or do
"edit:50" to go to the 50th line of the file.</p>
<p>Of course you can still use the normal <em>Ctrl+F</em> to search inside the opened
file and <em>Ctrl+G</em> for goto line.</p>
<h3 id="command-palette">Command palette</h3>
<p>Just press <em>Ctrl+Shift+P</em> to fire up the command palette, which holds
infrequently used functionality (indentation settings, changing the syntax,
sorting, ... ). No more trying to remember hundreds of key bindings or
searching through the menu for every minor thing. As above, this is dynamically
filtered on each keystroke and is very fast.</p>
<h3 id="multiple-selection">Multiple selection</h3>
<p>Press <em>Ctrl+D</em> to select the next occurrence of the selected word. Once you
have all of them selected, you can simply change them in one go (useful for
changing a variable name etc.).</p>
<p>An even more impressive feature, and one that you find yourself using way more
then you thought you would, is the command <em>Ctrl+Shift+L</em>, which splits the
selection into lines. Let's say you want to convert a list of student names
from a .txt file with each student in it's line to an actual Python list. To do
this, you need to add the opening and closing brackets and quotation marks
around each one. Using the above command, it is really simple - just select
everything (<em>Ctrl+A</em>), split selection into lines (<em>Ctrl+Shift+L</em>)), press
<em>Home</em> to get to the beginning of each line and add the quotation mark, press
<em>End</em> to go to the end of each line and add a quotation mark and a comma. All
that remains is to add the brackets at the beginning and end. Of course, if you
wanted them all to be in a single line, you could just press <em>Delete</em> after
adding the comma.</p>
<p>Believe me, once you get used to doing things this way, you will wonder how you
ever managed to make do without it.</p>
<h3 id="hard-line-wrap">Hard line wrap</h3>
<p>This is a feature I didn't at all until I started writing some more stuff in
Markdown, as I wrap my code by hand. Do you know that feeling when you write a
big paragraph and everything is nicely wrapped at the 80 char limit ... until
you see you forgot to write a word or two that is - you add the words at the
start somewhere, and now the whole paragraph is wrapped wrong. Do you want to
go through the whole thing again by hand and fix it so it's wrapped nicely? I
sure don't.</p>
<p>And that is exactly the reason why I started using the hard line wrap
(<em>Alt+Q</em>), which does the work for you. If you ever add or delete a word
somewhere in the paragraph, just press <em>Alt+Q</em> and it's done.</p>
<p>To make sure everything works fine even in markdown lists, code comments etc. I
recommend installing the <a href="https://github.com/ehuss/Sublime-Wrap-Plus">Sublime Wrap
Plus</a> package (read below how to
install packages easily).</p>
<h3 id="spell-check">Spell check</h3>
<p>Integrated spell checker to use when writing LaTeX, Markdown, RST etc. It uses
LibreOffice dictionaries so you can download the language you want. Enable it
with <em>F6</em>.</p>
<h3 id="moving-selected-lines-up-or-down">Moving selected lines up or down</h3>
<p>Select a few lines of your text, hold down <em>Ctrl+Shift</em> and press up or down.
The selection will move up or down according to your commands, "pushing" the
other lines above or below it (depending on which way you're going of course).
A simple and fast way of moving some code around, plus it looks like magic to
anyone looking over your shoulder :).</p>
<h3 id="sort-lines-and-removing-duplicate-lines">Sort lines and removing duplicate lines</h3>
<p>Sublime Text 2 comes with an integrated command to sort lines (<em>F9</em> or open up
the command palette and find it there). Those pesky imports at the top of each
file that you want to sort alphabetically? Well, now you can do it, quick and
easy.</p>
<p>Another great feature can be found under <em>Edit &gt; Permute Lines &gt; Unique</em>, which
gets rid of the duplicates.</p>
<p>Using a combination of those commands together with the
<a href="https://github.com/amisarca/Sublime-Text-2-Table-Cleaner">TableCleaner</a> you
can make data gotten from logs, debugs etc. presentable and readable very
quickly and easily.</p>
<h3 id="package-control"><a href="https://sublime.wbond.net/">Package control</a></h3>
<p>Leaving the best for last, this is the heart and soul of Sublime Text 2 for
me. It is a great and easy way to install and manage your packages.</p>
<p>Basically it allows you to download packages through the Command palette
(<em>Ctrl+Shift+P</em>) with the "Package control: Install Package" command, which
looks on the web to find the list of all packages with their descriptions that
can be searched as all other commands in the Command palette can.</p>
<p>Once you find the package you are looking for, just press enter to quickly and
easily install it and add it to your packages, which will automatically update
the packages when a new version is released.</p>
<p>Each package is also neatly organised, and comes with it's own commands
automatically added to the Command palette and it's own default and user
settings.</p>
<h2 id="personal-settings">Personal settings</h2>
<p>A blog post with my personal settings, the packages I use and how I keep
everything synchronised between machines will follow soon.</p>]]></content:encoded>
    </item>
  </channel>
</rss>
